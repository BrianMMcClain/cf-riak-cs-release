#!/bin/bash

set -x # Print commands and their arguments as they are executed.
set -e # exit immediately if a simple command exits with a non-zero status

# Control script to start/stop ruby/rack riak-cs job on a BOSH controlled VM
#
# This script can be run manually. Examples below assume you are in the root of this release project.
#
# Start process example:
# APP_DIR=/path/to/riak-cs RACK_ENV=development COMMAND=shotgun PORT=9393 jobs/riak-cs/bin/riak-cs_ctl start
#
# View STDOUT/STDERR logs:
# jobs/riak-cs/bin/riak-cs_ctl logs
#
# Clear logs:
# jobs/riak-cs/bin/riak-cs_ctl clearlogs

RUN_DIR=/var/vcap/sys/run/riak-cs
LOG_DIR=/var/vcap/sys/log/riak-cs
STORE=/var/vcap/store/riak-cs
PIDFILE=$RUN_DIR/riak-cs.pid
JOB_DIR=/var/vcap/jobs/riak-cs

export PATH=/var/vcap/packages/ruby/bin:$PATH
export HOME=/var/vcap

COMMAND=${COMMAND:-/var/vcap/packages/riak-cs/rel/bin/riak-cs start}
HOME=${HOME:-/home/vcap}

case $1 in

  start)
    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    mkdir -p $STORE

    # Put the config files in place
    cp $JOB_DIR/config/riak_cs.app.config /var/vcap/packages/riak-cs/rel/etc/app.config

    # Start syslog forwarding
    /var/vcap/packages/syslog_aggregator/setup_syslog_forwarder.sh $JOB_DIR/config

    # Set the max open file limit
    ulimit -n 65536

    # Update vm.args with current IP address
    IP_ADDR=`ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}' | tail -1`

    sed -i "s/127.0.0.1/$IP_ADDR/" /var/vcap/packages/riak-cs/rel/etc/vm.args
    sed -i "s/127.0.0.1/$IP_ADDR/" /var/vcap/packages/riak-cs/rel/etc/app.config

    # Start riak-cs
    /var/vcap/packages/riak-cs/rel/bin/riak-cs start

    sleep 2

    pgrep -f 'beam.*riak-cs' > $PIDFILE
    ;;

  stop)
    /var/vcap/packages/riak-cs/rel/bin/riak-cs stop
    rm -f $PIDFILE
    ;;

  logs)
    cat $LOG_DIR/*
    ;;

  tail)
    tail -f $LOG_DIR/*
    ;;

  clearlogs)
    rm $LOG_DIR/*
    ;;

  *)
  echo "Usage: riak-cs_ctl {start|stop|logs|tail|clearlogs}" ;;
esac
exit 0
